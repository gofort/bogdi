name: ci

on: push

jobs:
  build-static:
    name: Build static files
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          submodules: "recursive"

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "0.135.0"
          extended: true

      - name: Build
        run: hugo --minify --baseURL https://bogdi.xyz/

      - name: Upload static
        uses: actions/upload-artifact@v4
        with:
          name: static
          path: public

  build-image:
    runs-on: ubuntu-22.04
    needs: build-static
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Download static
        uses: actions/download-artifact@v5
        with:
          name: static
          path: public
      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: true
      #     context: .
      #     tags: |
      #       ghcr.io/${{ github.repository }}:latest
      #       ghcr.io/${{ github.repository }}:${{ github.sha }}
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Deploy to BunnyCDN
        uses: ayeressian/bunnycdn-storage-deploy@v2.4.0
        with:
          source: "public"
          storageZoneName: "bogdi-xyz-hugo"
          storagePassword: "${{ secrets.ftp_password }}"
          accessKey: "${{ secrets.BUNNY_API_KEY }}"
          pullZoneId: "${{ secrets.ZONE_ID }}"
          upload: "true"
          remove: "true"
          purgePullZone: "true"

  # deploy-image-to-cluster:
  #   runs-on: ubuntu-22.04
  #   needs: build-image
  #   steps:
  #     - name: deploy
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.PRIVATE_KEY }}
  #         port: ${{ secrets.PORT }}
  #         passphrase: ${{ secrets.PASSPHRASE }}
  #         script: bash -c "docker pull ghcr.io/${{ github.repository }}:${{ github.sha }} && docker rm -fv hugo && docker run --restart=always --name hugo -d --net=host -v /home/ubuntu/big-file:/opt/big-file ghcr.io/${{ github.repository }}:${{ github.sha }}"
